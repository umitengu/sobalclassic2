#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef MOCOPI_LIBRARY_SWIFT_H
#define MOCOPI_LIBRARY_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="mocopi_library",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)


SWIFT_EXTERN BOOL iosBluetoothManagerCancelSensorConnecting(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerConnectSensor(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosBluetoothManagerConnectedSensorCount(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerCreateBond(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerDisconnectSensor(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerGetBatteryLevel(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosBluetoothManagerGetBondableSensors(char * _Nullable * _Nonnull addresses);


/// <hr/>
/// <h2>MocopiBluetoothManager</h2>
SWIFT_EXTERN void iosBluetoothManagerInitialize(int32_t build_target);


SWIFT_EXTERN BOOL iosBluetoothManagerIsConnected(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerIsSensorConnectedStably(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerMoodifyCalibrationParameters(char const * _Nullable address, float stable_time_sec, float range, float timeout_sec) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerStartDiscovery(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerStartSensor(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerStopDiscovery(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerStopSensor(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosBluetoothManagerSwitchButtonNotify(char const * _Nullable address, BOOL isActiveSingle, BOOL isActiveDouble, BOOL isActiveTriple) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN float iosConfigGetHeight(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosConfigGetHeightUnit(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN double iosConfigGetMotionFrameRate(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosConfigGetResourcesInstalledAppVersion(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosConfigGetResourcesMocopiConfigVersion(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosConfigGetSensorAddress(int32_t part) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable const * _Nonnull iosConfigGetSensorAddresses(int32_t * _Nonnull listSize) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosConfigGetSensorName(int32_t part) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable const * _Nonnull iosConfigGetSensorNames(int32_t * _Nonnull listSize) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosConfigGetTargetBody(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosConfigGetViewerIp(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosConfigGetViewerPort(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>Config</h2>
SWIFT_EXTERN BOOL iosConfigInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosConfigLoadConfiguration(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosConfigRemoveSensor(int32_t part);


SWIFT_EXTERN BOOL iosConfigSaveConfiguration(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosConfigSetHeight(float height);


SWIFT_EXTERN void iosConfigSetHeightUnit(int32_t unit);


SWIFT_EXTERN void iosConfigSetMotionFrameRate(double motionFrameRate);


SWIFT_EXTERN void iosConfigSetResourcesInstalledAppVersion(char const * _Nullable version);


SWIFT_EXTERN void iosConfigSetResourcesMocopiConfigVersion(char const * _Nullable version);


SWIFT_EXTERN void iosConfigSetSensor(char const * _Nullable name, char const * _Nullable address, int32_t part);


SWIFT_EXTERN void iosConfigSetTargetBody(int32_t target_body);


SWIFT_EXTERN void iosConfigSetViewerIp(char const * _Nullable viewer_ip);


SWIFT_EXTERN void iosConfigSetViewerPort(int32_t viewer_port);


SWIFT_EXTERN int32_t iosDeviceManagerGetDeviceBatteryLevel(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>DeviceManager</h2>
SWIFT_EXTERN void iosDeviceManagerInitialize(void);


SWIFT_EXTERN BOOL iosFileManagerDeleteFile(char const * _Nullable path) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosFileManagerGetInputDataDirPath(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosFileManagerGetOutputDataDirPath(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int64_t iosFileManagerGetStorageFreeSpaceSize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosFileManagerGetUserDataDirPath(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>FileManager</h2>
SWIFT_EXTERN BOOL iosFileManagerInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosFileManagerIsExistsFile(char const * _Nullable path) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosFileManagerReadFile(char const * _Nullable path) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosFileManagerWriteFile(char const * _Nullable path, char const * _Nullable dataStr, BOOL isAppend) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosFirmwareUpdateManagerGetFirmwareVersion(char const * _Nullable address) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>FirmwareUpdateManager</h2>
SWIFT_EXTERN BOOL iosFirmwareUpdateManagerInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosFirmwareUpdateManagerStartFirmwareUpdate(char const * _Nullable address);


SWIFT_EXTERN void iosMocopiRecorderCheckBvhFormat(char const * _Nullable filename);


SWIFT_EXTERN void iosMocopiRecorderConvertBvh(char const * _Nullable filename);


SWIFT_EXTERN void iosMocopiRecorderDeleteBvh(char const * _Nullable filename);


SWIFT_EXTERN BOOL iosMocopiRecorderGetAssetsBvhFiles(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosMocopiRecorderGetBvhFileInformations(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>MocopiRecorder</h2>
SWIFT_EXTERN BOOL iosMocopiRecorderInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN BOOL iosMocopiRecorderIsExistRecordingFiles(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosMocopiRecorderPostFrameData(char const * _Nullable bvhBodyData, NSInteger dataIndex, double timestamp);


SWIFT_EXTERN BOOL iosMocopiRecorderReadBvhFile(char const * _Nullable filename) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosMocopiRecorderReadBvhFrame(int32_t frame);


SWIFT_EXTERN void iosMocopiRecorderRenameBvh(char const * _Nullable oldFileName, char const * _Nullable newFileName);


SWIFT_EXTERN void iosMocopiRecorderStartBvhStreamingRead(char const * _Nullable filename, int32_t bvhFormat);


SWIFT_EXTERN void iosMocopiRecorderStartRecording(char const * _Nullable bvhHeaderData);


SWIFT_EXTERN void iosMocopiRecorderStopBvhStreamingRead(void);


SWIFT_EXTERN void iosMocopiRecorderStopRecording(void);


SWIFT_EXTERN char const * _Nullable iosMocopiResourceHelperGetMocopiDirPath(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosMocopiResourceHelperGetNposeData(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosMocopiResourceHelperGetNposeFilePath(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN char const * _Nullable iosMocopiResourceHelperGetResourcesDirPath(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>MocopiResourceHelper</h2>
SWIFT_EXTERN BOOL iosMocopiResourceHelperInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetBluetoothPermission(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetBluetoothSetting(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetExternalStoragePermission(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetLocationPermission(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetLocationSetting(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetNetworkConnection(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN int32_t iosPermissionGetRecordAudioPermission(void) SWIFT_WARN_UNUSED_RESULT;


/// <hr/>
/// <h2>Permission</h2>
SWIFT_EXTERN void iosPermissionInitialize(void);


SWIFT_EXTERN void iosRegisterOnSensorBatteryLevelUpdateFailed(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnButtonNotificationUpdated(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnCalibrationParametersUpdated(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnCheckBvhFormatCompleted(void (* _Nonnull callback)(int32_t));


SWIFT_EXTERN void iosRegisterOnDeleteBvhFileCompleted(void (* _Nonnull callback)(BOOL));


SWIFT_EXTERN void iosRegisterOnDeviceBatteryLevelDetected(void (* _Nonnull callback)(int32_t));


SWIFT_EXTERN void iosRegisterOnFileManagerWriteUpdated(void (* _Nonnull callback)(int32_t, char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnGetAssetsBvhFiles(void (* _Nonnull callback)(char const * _Nullable const * _Nullable, int64_t const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnGetRecordedBvhFileInformations(void (* _Nonnull callback)(char const * _Nullable const * _Nullable, int64_t const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnMessageDebug(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnMessageError(void (* _Nonnull callback)(char const * _Nullable));


/// <hr/>
/// <h2>Callback</h2>
SWIFT_EXTERN void iosRegisterOnMessageInfo(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnMessageWarning(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingConvertProgress(void (* _Nonnull callback)(int32_t));


SWIFT_EXTERN void iosRegisterOnRecordingFileRead(void (* _Nonnull callback)(char const * _Nullable, char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingFileReadFailed(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingStatusUpdated(void (* _Nonnull callback)(int32_t, BOOL, char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadFrame(void (* _Nonnull callback)(char const * _Nullable, char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadFrameFailed(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadOtherBvh(void (* _Nonnull callback)(char const * _Nullable, char const * _Nullable, char const * _Nullable, int32_t, float));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadProgress(void (* _Nonnull callback)(char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadStartFailed(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadStarted(void (* _Nonnull callback)(char const * _Nullable, char const * _Nullable, char const * _Nullable, int32_t, float));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadStopFailed(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnRecordingStreamingReadStopped(void (* _Nonnull callback)(void));


SWIFT_EXTERN void iosRegisterOnRenameBvhFileCompleted(void (* _Nonnull callback)(BOOL));


SWIFT_EXTERN void iosRegisterOnSensorBatteryLevelUpdated(void (* _Nonnull callback)(char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnSensorBonded(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnSensorButtonPressed(void (* _Nonnull callback)(char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnSensorConnected(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnSensorConnectedStably(void (* _Nonnull callback)(char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnSensorConnectionFailed(void (* _Nonnull callback)(char const * _Nullable, int32_t));


SWIFT_EXTERN void iosRegisterOnSensorDisconnected(void (* _Nonnull callback)(char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnSensorFirmwareUpdated(void (* _Nonnull callback)(char const * _Nullable, int32_t, int32_t));


SWIFT_EXTERN void iosRegisterOnSensorFound(void (* _Nonnull callback)(char const * _Nullable, char const * _Nullable));


SWIFT_EXTERN void iosRegisterOnSensorUpdated(void (* _Nonnull callback)(char const * _Nullable, double, double, float const * _Nonnull, float const * _Nonnull, float const * _Nonnull));


SWIFT_EXTERN void iosRegisterOnSensorUpdatedBle(void (* _Nonnull callback)(char const * _Nullable, uint8_t const * _Nonnull));


SWIFT_EXTERN void iosRegisterOnSensorUpdatedRawData(void (* _Nonnull callback)(char const * _Nullable, double, float const * _Nonnull, float const * _Nonnull));


SWIFT_EXTERN void iosRegisterOnUdpSendFailed(void (* _Nonnull callback)(void));


SWIFT_EXTERN void iosUdpManagerFinalize(void);


/// <hr/>
/// <h2>UdpManager</h2>
SWIFT_EXTERN BOOL iosUdpManagerInitialize(void) SWIFT_WARN_UNUSED_RESULT;


SWIFT_EXTERN void iosUdpManagerSendUdp(uint8_t const * _Nullable data_byte, int32_t len);


SWIFT_EXTERN BOOL iosUdpManagerStartUdp(char const * _Nullable viewer_ip, int32_t viewer_port) SWIFT_WARN_UNUSED_RESULT;

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
